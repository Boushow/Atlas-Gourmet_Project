{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"map\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1"],"sources":["C:\\Users\\robba\\VueProjects\\Gourmet_Atlas-Project-main\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"map\"></div>\r\n</template>\r\n\r\n<script>\r\nimport L from \"leaflet\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n  mounted() {\r\n    this.initMap();\r\n    this.fetchDishes();\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      this.map = L.map(\"map\").setView([0, 0], 2); // Position initiale de la carte\r\n\r\n      // Ajout du fond de carte Jawg.light\r\n      L.tileLayer(\r\n        \"https://tile.jawg.io/jawg-light/{z}/{x}/{y}.png?access-token={accessToken}\",\r\n        {\r\n          attribution:\r\n            'Map data &copy; <a href=\"https://www.jawg.io/\">Jawg</a> | &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n          maxZoom: 18,\r\n          accessToken:\r\n            \"MsXnKTMtfJ4dhKXBU3PqU8FerMf6QB2aMA5Aidw6tLH85H2044dD1FoAtOLlhYey\", // Remplacez par votre propre jeton d'accès Jawg\r\n        }\r\n      ).addTo(this.map);\r\n    },\r\n    async fetchDishes() {\r\n      try {\r\n        // Faites une requête à l'API pour récupérer les données des plats\r\n        const response = await fetch(\"/api/photos\"); // Utilisez le chemin relatif avec le proxy configuré\r\n        const dishes = await response.json(); // Convertir la réponse en JSON\r\n\r\n        // Placez les marqueurs sur la carte pour chaque plat\r\n        dishes.forEach((dish) => {\r\n          if (dish.location) {\r\n            const name = dish.name;\r\n            const image = dish.image;\r\n            const location = [dish.location.latitude, dish.location.longitude];\r\n\r\n            const markerIcon = L.icon({\r\n              iconUrl: image,\r\n              iconSize: [40, 40],\r\n              iconAnchor: [20, 40],\r\n              popupAnchor: [0, -40],\r\n            });\r\n\r\n            L.marker(location, { icon: markerIcon })\r\n              .addTo(this.map)\r\n              .bindPopup(\r\n                `<b>${name}</b><br><img src=\"${image}\" alt=\"${name}\" style=\"max-width: 100px;\">`\r\n              );\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching dishes:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;uBAAbC,mBAAA,CAAoB,OAApBC,UAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
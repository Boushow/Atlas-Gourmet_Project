{"ast":null,"code":"import L from \"leaflet\";\nexport default {\n  name: \"App\",\n  mounted() {\n    this.initMap();\n    this.fetchDishes();\n  },\n  methods: {\n    initMap() {\n      this.map = L.map(\"map\").setView([0, 0], 2); // Position initiale de la carte\n\n      // Ajout du fond de carte Jawg.light\n      L.tileLayer(\"https://tile.jawg.io/jawg-light/{z}/{x}/{y}.png?access-token={accessToken}\", {\n        attribution: 'Map data © <a href=\"https://www.jawg.io/\">Jawg</a> | © <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n        maxZoom: 18,\n        accessToken: \"MsXnKTMtfJ4dhKXBU3PqU8FerMf6QB2aMA5Aidw6tLH85H2044dD1FoAtOLlhYey\" // Remplacez par votre propre jeton d'accès Jawg\n      }).addTo(this.map);\n    },\n    async fetchDishes() {\n      try {\n        const response = await fetch(\"/api/photos\");\n        const data = await response.json();\n        const dishes = data.results; // Utilisez data.results au lieu de data\n\n        dishes.forEach(dish => {\n          if (dish.location && dish.location.latitude && dish.location.longitude) {\n            // Vérifiez que les données de localisation sont disponibles\n            const name = dish.name;\n            const image = dish.image;\n            const location = [dish.location.latitude, dish.location.longitude];\n            const markerIcon = L.icon({\n              iconUrl: image,\n              iconSize: [40, 40],\n              iconAnchor: [20, 40],\n              popupAnchor: [0, -40]\n            });\n            L.marker(location, {\n              icon: markerIcon\n            }).addTo(this.map).bindPopup(`<b>${name}</b><br><img src=\"${image}\" alt=\"${name}\" style=\"max-width: 100px;\">`);\n          }\n        });\n      } catch (error) {\n        console.error(\"Error fetching dishes:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["L","name","mounted","initMap","fetchDishes","methods","map","setView","tileLayer","attribution","maxZoom","accessToken","addTo","response","fetch","data","json","dishes","results","forEach","dish","location","latitude","longitude","image","markerIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","marker","bindPopup","error","console"],"sources":["C:\\Users\\robba\\VueProjects\\Gourmet_Atlas-Project-main\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"map\"></div>\r\n</template>\r\n\r\n<script>\r\nimport L from \"leaflet\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n  mounted() {\r\n    this.initMap();\r\n    this.fetchDishes();\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      this.map = L.map(\"map\").setView([0, 0], 2); // Position initiale de la carte\r\n\r\n      // Ajout du fond de carte Jawg.light\r\n      L.tileLayer(\r\n        \"https://tile.jawg.io/jawg-light/{z}/{x}/{y}.png?access-token={accessToken}\",\r\n        {\r\n          attribution:\r\n            'Map data © <a href=\"https://www.jawg.io/\">Jawg</a> | © <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n          maxZoom: 18,\r\n          accessToken:\r\n            \"MsXnKTMtfJ4dhKXBU3PqU8FerMf6QB2aMA5Aidw6tLH85H2044dD1FoAtOLlhYey\", // Remplacez par votre propre jeton d'accès Jawg\r\n        }\r\n      ).addTo(this.map);\r\n    },\r\n    async fetchDishes() {\r\n      try {\r\n        const response = await fetch(\"/api/photos\");\r\n        const data = await response.json();\r\n        const dishes = data.results; // Utilisez data.results au lieu de data\r\n\r\n        dishes.forEach((dish) => {\r\n          if (\r\n            dish.location &&\r\n            dish.location.latitude &&\r\n            dish.location.longitude\r\n          ) {\r\n            // Vérifiez que les données de localisation sont disponibles\r\n            const name = dish.name;\r\n            const image = dish.image;\r\n            const location = [dish.location.latitude, dish.location.longitude];\r\n\r\n            const markerIcon = L.icon({\r\n              iconUrl: image,\r\n              iconSize: [40, 40],\r\n              iconAnchor: [20, 40],\r\n              popupAnchor: [0, -40],\r\n            });\r\n\r\n            L.marker(location, { icon: markerIcon })\r\n              .addTo(this.map)\r\n              .bindPopup(\r\n                `<b>${name}</b><br><img src=\"${image}\" alt=\"${name}\" style=\"max-width: 100px;\">`\r\n              );\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching dishes:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAKA,OAAOA,CAAA,MAAO,SAAS;AAEvB,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,OAAO,CAAC,CAAC;IACd,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACPF,OAAOA,CAAA,EAAG;MACR,IAAI,CAACG,GAAE,GAAIN,CAAC,CAACM,GAAG,CAAC,KAAK,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;;MAE5C;MACAP,CAAC,CAACQ,SAAS,CACT,4EAA4E,EAC5E;QACEC,WAAW,EACT,yIAAyI;QAC3IC,OAAO,EAAE,EAAE;QACXC,WAAW,EACT,kEAAkE,CAAE;MACxE,CACF,CAAC,CAACC,KAAK,CAAC,IAAI,CAACN,GAAG,CAAC;IACnB,CAAC;IACD,MAAMF,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMS,QAAO,GAAI,MAAMC,KAAK,CAAC,aAAa,CAAC;QAC3C,MAAMC,IAAG,GAAI,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,MAAMC,MAAK,GAAIF,IAAI,CAACG,OAAO,EAAE;;QAE7BD,MAAM,CAACE,OAAO,CAAEC,IAAI,IAAK;UACvB,IACEA,IAAI,CAACC,QAAO,IACZD,IAAI,CAACC,QAAQ,CAACC,QAAO,IACrBF,IAAI,CAACC,QAAQ,CAACE,SAAQ,EACtB;YACA;YACA,MAAMtB,IAAG,GAAImB,IAAI,CAACnB,IAAI;YACtB,MAAMuB,KAAI,GAAIJ,IAAI,CAACI,KAAK;YACxB,MAAMH,QAAO,GAAI,CAACD,IAAI,CAACC,QAAQ,CAACC,QAAQ,EAAEF,IAAI,CAACC,QAAQ,CAACE,SAAS,CAAC;YAElE,MAAME,UAAS,GAAIzB,CAAC,CAAC0B,IAAI,CAAC;cACxBC,OAAO,EAAEH,KAAK;cACdI,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;cAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;cACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;YACtB,CAAC,CAAC;YAEF9B,CAAC,CAAC+B,MAAM,CAACV,QAAQ,EAAE;cAAEK,IAAI,EAAED;YAAW,CAAC,EACpCb,KAAK,CAAC,IAAI,CAACN,GAAG,EACd0B,SAAS,CACP,MAAK/B,IAAK,qBAAoBuB,KAAM,UAASvB,IAAK,8BACrD,CAAC;UACL;QACF,CAAC,CAAC;MACJ,EAAE,OAAOgC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '../public/logo.png';\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"\",\n  class: \"logo\"\n})], -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map\"\n}, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _hoisted_2], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_createElementVNode","src","alt","class","id","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2"],"sources":["/home/mohamed/code/Gourmet_Atlas-Project/Gourmet_Atlas-Project/src/App.vue"],"sourcesContent":["<template>\n  <header>\n    <img src=\"../public/logo.png\" alt=\"\" class=\"logo\">\n  </header>\n  <div id=\"map\"></div>\n</template>\n\n<script>\nimport L from \"leaflet\";\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      meals: [],\n    };\n  },\n  mounted() {\n    this.initMap();\n    this.fetchDishes();\n  },\n  methods: {\n    initMap() {\n      this.map = L.map(\"map\", {\n        center: [0, 0],\n        zoom: 2,\n        minZoom: 2,\n        maxBounds: [\n          [-90, -180],\n          [90, 180],\n        ],\n        maxBoundsViscosity: 1.0,\n      });\n\n      L.tileLayer(\n        \"https://tile.jawg.io/jawg-light/{z}/{x}/{y}.png?access-token={accessToken}\",\n        {\n          attribution:\n            'Map data &copy; <a href=\"https://www.jawg.io/\">Jawg</a> | &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n          maxZoom: 18,\n          accessToken:\n            \"MsXnKTMtfJ4dhKXBU3PqU8FerMf6QB2aMA5Aidw6tLH85H2044dD1FoAtOLlhYey\",\n        }\n      ).addTo(this.map);\n    },\n\n    async fetchDishes() {\n      try {\n        const response = await fetch(\n          \"https://worldfood.guide/api/dishes/\"\n        );\n        const data = await response.json();\n        this.meals = data.results.slice(0, 20);\n\n        for (const meal of this.meals) {\n          const mealName = meal.name;\n          const mealImage = await this.fetchMealImage(mealName);\n          const mealLocation = await this.fetchMealLocation(mealName);\n          if (mealImage && mealLocation) {\n            this.displayMeal(mealName, mealImage, mealLocation);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching dishes:\", error);\n      }\n    },\n\n    async fetchMealImage(mealName) {\n      try {\n        const response = await fetch(\n          `https://worldfood.guide/api/dishes/photos?name=${encodeURIComponent(mealName)}`\n        );\n        const data = await response.json();\n        if (data && data.length > 0) {\n          return data[0].location;\n        }\n      } catch (error) {\n        console.error(\"Error fetching meal image for\", mealName, \":\", error);\n      }\n      return null;\n    },\n\n    async fetchMealLocation(mealName) {\n      try {\n        const response = await fetch(\n          `https://worldfood.guide/api/dishes/?name=${encodeURIComponent(mealName)}`\n        );\n        const data = await response.json();\n        if (data && data.length > 0) {\n          return data[0].uri;\n        }\n      } catch (error) {\n        console.error(\"Error fetching meal location for\", mealName, \":\", error);\n      }\n      return null;\n    },\n\n    displayMeal(mealName, mealImage, mealLocation) {\n      const popupContent = `\n        <div class=\"meal-details\">\n          <img class=\"meal-image\" src=\"${mealImage}\" alt=\"${mealName}\">\n          <div>\n            <p class=\"meal-name\">${mealName}</p>\n            <a href=\"${mealLocation}\" target=\"_blank\">View Details</a>\n          </div>\n        </div>`;\n\n      L.popup()\n        .setLatLng([0, 0])\n        .setContent(popupContent)\n        .openOn(this.map);\n    },\n  },\n};\n</script>\n\n<style>\n/* Add your CSS styles here */\n</style>\n"],"mappings":";OAESA,UAAwB;gCAD/BC,mBAAA,CAES,iB,aADPA,mBAAA,CAAkD;EAA7CC,GAAwB,EAAxBF,UAAwB;EAACG,GAAG,EAAC,EAAE;EAACC,KAAK,EAAC;;gCAE7CH,mBAAA,CAAoB;EAAfI,EAAE,EAAC;AAAK;;uBAJfC,mBAAA,CAAAC,SAAA,SACEC,UAES,EACTC,UAAoB,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}